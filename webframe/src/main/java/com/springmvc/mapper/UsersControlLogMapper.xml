<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.mapper.UsersControlLogMapper">
  <resultMap id="BaseResultMap" type="com.springmvc.model.UsersControlLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.springmvc.model.UsersControlLog">
    <result column="parameter" jdbcType="LONGVARCHAR" property="parameter" />
  </resultMap>

  <!-- 增加级联属性 -->
  <resultMap extends="ResultMapWithBLOBs" id="JoinResultMap" type="com.springmvc.model.UsersControlLog">
    <result column="departName" jdbcType="VARCHAR" property="departName" />
    <result column="uName" jdbcType="VARCHAR" property="uName" />
  </resultMap>

  <sql id="Base_Column_List">
    id, uid, token, type, url, name, createDate
  </sql>
  <sql id="Blob_Column_List">
    parameter
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users_control_log
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users_control_log
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.springmvc.model.UsersControlLog">
    insert into users_control_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="parameter != null">
        parameter,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="parameter != null">
        #{parameter,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <select id="getCount" resultType="int">
    select count(1)
    from users_control_log l
    JOIN users u on l.uid=u.id
    join department d on u.departId=d.id
    <if test="where != null">where ${where}</if>
    <if test="orderBy != null">order by ${orderBy}</if>
  </select>

  <select id="selectPagination" resultMap="JoinResultMap">
    select l.id, l.uid, l.token, l.type, l.url, l.name, l.createDate,
    u.name as uName, d.`name` as departName
    from users_control_log l
    JOIN users u on l.uid=u.id
    join department d on u.departId=d.id
    <if test="where != null">where ${where}</if>
    <if test="orderBy != null">order by ${orderBy}</if>
    limit #{start},#{pageSize}
  </select>

</mapper>