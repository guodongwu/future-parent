<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.mapper.UsersLoginLogMapper">

  <resultMap id="BaseResultMap" type="com.springmvc.model.UsersLoginLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lastId" jdbcType="INTEGER" property="lastid" />
    <result column="usersId" jdbcType="INTEGER" property="usersid" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>

  <!-- 增加级联属性 -->
  <resultMap extends="BaseResultMap" id="JoinResultMap" type="com.springmvc.model.UsersLoginLog">
    <result column="departName" jdbcType="VARCHAR" property="departName" />
    <result column="uName" jdbcType="VARCHAR" property="uName" />
  </resultMap>

  <sql id="Base_Column_List">
    id,lastId, usersId, ip, country, province, city, result,createDate,token
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users_login_log
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users_login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.springmvc.model.UsersLoginLog">
    insert into users_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="lastid != null">
        lastId,
      </if>
      <if test="usersid != null">
        usersId,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="token != null">
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lastid != null">
        #{lastid,jdbcType=INTEGER},
      </if>
      <if test="usersid != null">
        #{usersid,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectLast" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users_login_log
    where usersid = #{usersid,jdbcType=INTEGER}
    order by id desc limit 1
  </select>

  <select id="getCount" resultType="int">
    select count(1)
    from users_login_log l
    JOIN users u on l.usersId=u.id
    join department d on u.departId=d.id
    <if test="where != null">where ${where}</if>
    <if test="orderBy != null">order by ${orderBy}</if>
  </select>

  <select id="selectPagination" resultMap="BaseResultMap">
    select l.id,l.lastId, l.usersId, l.ip, l.country, l.province, l.city, l.result,l.createDate,l.token,
    u.name as uName, d.`name` as departName
    from users_login_log l
    JOIN users u on l.usersId=u.id
    join department d on u.departId=d.id
    <if test="where != null">where ${where}</if>
    <if test="orderBy != null">order by ${orderBy}</if>
    limit #{start},#{pageSize}
  </select>

</mapper>