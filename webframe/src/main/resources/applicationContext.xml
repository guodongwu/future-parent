<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"  
        xmlns:tx="http://www.springframework.org/schema/tx"  
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:task="http://www.springframework.org/schema/task"
        xmlns:cache="http://www.springframework.org/schema/cache"

		xsi:schemaLocation="
        http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-4.3.xsd     
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
        ">

	<context:component-scan base-package="com.springmvc.*" use-default-filters="false">
		<!--扫描service注解 解决事物不起作用 给service 增加事物处理能力 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>

    <context:component-scan base-package="com.gitee.sunchenbin.mybatis.actable.manager.*"/>

    <!-- json转换 -->
	<bean id="objectmapper" class="com.fasterxml.jackson.databind.ObjectMapper" scope="singleton" />

    <!-- properties引入配置 -->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:autoCreateTable.properties</value>
            </list>
        </property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:jdbc.properties</value>
                </list>
            </property>
        <property name="properties" ref="configProperties" />
    </bean>

    <!-- 数据源 -->
   <!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
		<property name="poolProperties">
			<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
			    <property name="driverClassName" value="${jdbc.driveClass}" />
				<property name="url" value="${jdbc.url}" />
		 		<property name="username" value="${jdbc.username}" />
		 		<property name="password" value="${jdbc.password}" />
				<property name="jmxEnabled" value="true" />
				<property name="testWhileIdle" value="false" />
				<property name="testOnBorrow" value="true" />
				<property name="testOnReturn" value="false" />
				<property name="validationInterval" value="30000" />
				<property name="validationQuery" value="SELECT 1" />
				<property name="timeBetweenEvictionRunsMillis" value="30000" />
				<property name="maxActive" value="${jdbc.maxActive}" />
				<property name="initialSize" value="${jdbc.initialSize}" />
				<property name="maxWait" value="10000" />
				<property name="minEvictableIdleTimeMillis" value="30000" />
				<property name="maxIdle" value="5" />
				<property name="minIdle" value="5" />
				<property name="logAbandoned" value="false" />
				<property name="removeAbandoned" value="true" />
				<property name="removeAbandonedTimeout" value="60" />
				<property name="jdbcInterceptors"
					value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
			</bean>
		</property>
	</bean>-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
     </bean>
    <!-- 主库模板配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource" />

   	 <!-- mybatis配置Session工厂 -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource" ref="dataSource"></property>
         <!-- 加载mybatis.cfg.xml文件-->
        <!-- <property name="configLocation" value="classpath:mybatis-config.xml"></property> -->
         <!-- 自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名  -->
         <property name="mapperLocations">
             <array>
                 <value>classpath:com/springmvc/mapper/*.xml</value>
                 <value>classpath*:com/gitee/sunchenbin/mybatis/actable/mapping/*/*.xml</value>
             </array>
         </property>
         <property name="typeAliasesPackage" value="com.sunchenbin.store.model.*" />
     </bean>

     <!-- 自动扫描所有的Mapper接口与文件 -->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="com.springmvc.mapper,com.gitee.sunchenbin.mybatis.actable.dao">
         </property>
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
     </bean>


	<!-- 配置事物管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />

    <!-- 采用@Transaction注解配置事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<aop:aspectj-autoproxy/>

	<!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		  p:defaultEncoding="UTF-8"
		  p:maxUploadSize="5400000"
		  p:uploadTempDir="fileUpload/temp"  ></bean>

</beans>